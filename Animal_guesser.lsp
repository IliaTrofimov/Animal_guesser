; =============================================
; Глобальные переменные

(setq SPICIES nil)
(setq GROUPS nil)
( DEFRAMEQ TAXON )
( DEFRAMEQ PROPERTY )

; =============================================
; Вспомогательные функции

(defun SETOF (lst)
	(cond 
		((null lst) nil)
		(T (cons (car lst) (SETOF (remove (car lst) (cdr lst)))))
	)
)

(defun ANSC (F) (FCHILDREN F INSTANCE) )
(defun PRED (F) (FCHILDREN F) )
(defun PRED_ALL (F) (FTREE F INSTANCE) )

; =============================================
; Поиск
(defun SELECT (NODE PROPERTIES ASPECTS)
	(if (null NODE) (setq NODE TAXON))
	
	(setq result (FQUERY nil (pop PROPERTIES) nil (pop ASPECTS) NODE INSTANCE))
	(loop 
		((or (null PROPERTIES) (null APSECTS) (null result)) result)
		(setq temp (FQUERY nil (pop PROPERTIES) nil (pop ASPECTS) NODE INSTANCE))
		(setq result (INTERSECT temp result))
	)
)

(defun SEARCH (NODE)
	(setq props_temp (ANSC PROPERTY))
	(setq props nil)
	(setq aspects nil)
	(setq result SPICIES)
	
	(loop  
		(setq temp (remove INSTANCE (remove AKO (FGET (car props_temp)))))
		(setq ch 'ns)
		
		(loop 
			(print (list (car props_temp) 'is (car temp) '?))
			(setq ch (read))
			((or (null temp) (eql ch 'ns) (eql ch 'stop)) nil)
			((eql ch 'y) (progn 
				(push (car temp) aspects)
				(push (car props_temp) props)
				(setq result (INTERSECT (FQUERY nil (car props_temp) nil (pop temp) NODE INSTANCE) result))
			))
			(pop temp)
		)
		
		(pop props_temp)
		((or (eql ch 'stop) (null props_temp) (null result) (null (cdr result))) result)
	)
)



; =============================================
; Создание характеристик

( PASSERTQ CREATE_PROP ( NEW_PROP ASPECTS )
	(setq ASPECTS (SETOF ASPECTS))
	(loop ((null ASPECTS) NEW_PROP)
		( FPUT NEW_PROP (car ASPECTS) $VALUE (pop ASPECTS) )
	)
	( FINSTANTIATE PROPERTY NEW_PROP )
)

( PASSERTQ ADD_ASPECT ( PROP ASPECT )
	(if (null (FGET PROP ASPECT)) (FPUT PROP ASPECT $VALUE ASPECT))
)

( PASSERTQ DEL_PROP (PROP)
	(DESTROY PROP)
)

( PASSERTQ DEL_ASPECT (PROP ASPECT)
	(FDELETE PROP ASPECT)
)
	
	
; =============================================
; Создание систематических единиц

( PASSERTQ CREATE_TAXON ( NEW_TAXON PARENT PROPERTIES APSECTS )
	(if (null PARENT) 
		( DEFRAMEQ NEW_TAXON )
		( FINSTANTIATE PARENT NEW_TAXON ))
		
	(setq SPICIES (remove PARENT SPICIES))
	(push PARENT GROUPS)
	(push NEW_TAXON SPICIES)
	(setq GROUPS (SETOF GROUPS))
	(setq SPICIES (SETOF SPICIES))
	
	(setq PROPERTIES (SETOF PROPERTIES))
	(setq APSECTS (SETOF APSECTS))
	(loop ((or (null PROPERTIES) (null APSECTS)) NEW_TAXON)
		( FPUT NEW_TAXON (pop PROPERTIES) $VALUE (pop APSECTS) )
	) 
)

( PASSERTQ DEL_TAXON (TXN)
	(setq SPICIES (remove TXN SPICIES)) 
	(FDELETE (PRED TXN) INSTANCE $VALUE TXN)
	(FDESTROY TXN)
)

; =============================================
; Характеристки

( CREATE_PROP MOVEMENT '(WALKING SWIMMING FLYING DIGGING WALL_CRAWLING) )
( CREATE_PROP CONSUMPTION '(PRODUCENT CONSUMENT1 CONSUMENT2 CONSUMENT3 REDUCENT))
( CREATE_PROP BODY_TEMPR '(CONSTANT INCONSISTENT))
( CREATE_PROP AREAL '(ALL NEAR_HUMAN TROPICS THUNDRA FOREST DESERT OCEAN RIVERS MOUNTAINS SOIL ARCTICS PRERIA))
( CREATE_PROP SKELETON '(INNER EXO NONE))
( CREATE_PROP CHORD '(YES NONE))
( CREATE_PROP EXTINCTED '(YES NO IN_WILD))


; =============================================
; Сеть

( CREATE_TAXON CHORDATE TAXON '(CHORD SKELETON) '(YES INNER) )
( CREATE_TAXON NONE_CHORDATE TAXON '(CHORD BODY_TEMPR) '(NONE INCONSISTENT) )

; Млекопитающие
( CREATE_TAXON MAMMALS CHORDATE BODY_TEMPR CONSTANT )
( CREATE_TAXON CAT MAMMALS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(WALKING CONSUMENT3 NEAR_HUMAN NO) )
( CREATE_TAXON BEAR MAMMALS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(WALKING CONSUMENT3 FOREST NO) )
( CREATE_TAXON HUMAN MAMMALS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(WALKING CONSUMENT3 ALL NO) )
( CREATE_TAXON WHITE_WHALE MAMMALS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(SWIMMING CONSUMENT2 OCEAN NO) )
							
; Амфибии	
( CREATE_TAXON AMPHIBIA CHORDATE BODY_TEMPR INCONSISTENT )	
( CREATE_TAXON BULLFROG AMPHIBIA '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(WALKING CONSUMENT2 RIVERS NO) )	

; Рыбы	
( CREATE_TAXON FISH CHORDATE BODY_TEMPR INCONSISTENT )	
( CREATE_TAXON SHARK AMPHIBIA '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(SWIMMING CONSUMENT3 OCEAN NO) )	
( CREATE_TAXON CLOWNFISH AMPHIBIA '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(SWIMMING CONSUMENT2 OCEAN NO) )							

; Птицы							
( CREATE_TAXON BIRDS CHORDATE BODY_TEMPR CONSTANT )	
( CREATE_TAXON PARROT BIRDS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(FLYING CONSUMENT1 TROPICS NO) )	
( CREATE_TAXON DOVE BIRDS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(FLYING CONSUMENT1 NEAR_HUMAN NO) )	
( CREATE_TAXON PENGUIN BIRDS '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(WALKING CONSUMENT2 ARCTICS NO) )		
							
; Рептилии		
( CREATE_TAXON REPTILIA CHORDATE BODY_TEMPR INCONSISTENT )							
( CREATE_TAXON ALLIGATOR REPTILIA '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
							'(SWIMMING CONSUMENT3 RIVERS NO) )	
( CREATE_TAXON DINOSAUR CHORDATE 'EXTINCTED YES)
( CREATE_TAXON TREX DINOSAUR '(MOVEMENT CONSUMPTION) 
							'(WALKING CONSUMENT3) )	
							
; Насекомые		
( CREATE_TAXON INSECTS NONE_CHORDATE SKELETON EXO )	
( CREATE_TAXON ROACH INSECTS SKELETON '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
										'(WALKING CONSUMENT1 ALL NO) )
( CREATE_TAXON BUTTERFLY INSECTS SKELETON '(MOVEMENT CONSUMPTION AREAL EXTINCTED) 
										'(FLYING CONSUMENT1 PRERIA NO) )
										
( CREATE_TAXON EARTHWORM NONE_CHORDATE '(MOVEMENT CONSUMPTION AREAL EXTINCTED SKELETON) 
										'(DIGGING REDUCENT SOIL NO NONE) )

